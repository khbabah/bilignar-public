{"version":3,"file":"component---packages-blog-gatsby-blog-core-src-templates-posts-js-83e5f3e7aed5f8f009f7.js","mappings":"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","sources":["webpack://@elegantstack/gatsby-starter-flexiblog-news/../packages/themes/gatsby-theme-flexiblog-news/src/containers/Posts.jsx","webpack://@elegantstack/gatsby-starter-flexiblog-news/../packages/blog/gatsby-blog-core/src/templates/posts.js","webpack://@elegantstack/gatsby-starter-flexiblog-news/../packages/blog/gatsby-blog-helpers/src/useBlogCategoriesKanash.jsx","webpack://@elegantstack/gatsby-starter-flexiblog-news/../packages/blog/gatsby-blog-helpers/src/useBlogAuthors.jsx","webpack://@elegantstack/gatsby-starter-flexiblog-news/../packages/blog/gatsby-blog-helpers/src/useBlogAuthorsTwitter.jsx","webpack://@elegantstack/gatsby-starter-flexiblog-news/../packages/flow-ui/flow-ui-components/src/IconButton/IconButton.jsx","webpack://@elegantstack/gatsby-starter-flexiblog-news/../packages/flow-ui/flow-ui-widgets/src/Categories/Categories.jsx"],"sourcesContent":["import React from 'react'\r\nimport { Layout, Stack, Hero, Main, Sidebar, Banner, Wow } from '@layout'\r\nimport CardList from '@components/CardList'\r\nimport Divider from '@components/Divider'\r\nimport Seo from '@widgets/Seo'\r\nimport ScrollTop from '@widgets/ScrollTop/ScrollTop'\r\nimport { useBlogCategoriesKanash } from '@helpers-blog'\r\nimport Categories from '@widgets/Categories'\r\n\r\nconst Posts = ({\r\n  data: { posts = {}, featuredPosts = {}, recentPosts = {} },\r\n  ...props\r\n}) => {\r\n  const { pageContext: { services = {} } = {} } = props\r\n  const categories = useBlogCategoriesKanash()\r\n\r\n  return (\r\n    <Layout {...props}>\r\n      <ScrollTop showBelow={250} />\r\n      <Seo title='الصفحة الرئيسية' /> <Seo title='Home' />\r\n      <Divider />\r\n      <Hero>\r\n        <Categories categories={categories} variant='horizontal' omitTitle />\r\n      </Hero>\r\n      <Divider />\r\n      <Hero sx={{ position: `relative` }}>\r\n        <CardList\r\n          nodes={featuredPosts.nodes}\r\n          limit={1}\r\n          columns={[1]}\r\n          variant='horizontal-cover-hero'\r\n          loading='eager'\r\n        />\r\n      </Hero>\r\n      <Divider />\r\n      <Hero>\r\n        <CardList\r\n          nodes={featuredPosts.nodes}\r\n          limit={2}\r\n          skip={1}\r\n          columns={[1, 1, 2]}\r\n          variant='horizontal'\r\n          loading='eager'\r\n        />\r\n      </Hero>\r\n      <Hero>\r\n        <Divider />\r\n        <Banner />\r\n        <Divider />\r\n      </Hero>\r\n      <Divider />\r\n      <Hero wide>\r\n        {posts.group.length &&\r\n          posts.group.map((group, index) => (\r\n            <React.Fragment key={`${group.categoryName}.list`}>\r\n              {index === 1 ? (\r\n                <Stack\r\n                  title={group.categoryName}\r\n                  titleLink={group.nodes[0].category.slug}\r\n                >\r\n                  <Main>\r\n                    <CardList\r\n                      nodes={group.nodes}\r\n                      limit={1}\r\n                      variant={['horizontal-md', 'horizontal']}\r\n                    />\r\n                  </Main>\r\n                  <Sidebar sx={{ pl: 3, display: [null, `flex`] }}>\r\n                    <Wow />\r\n                  </Sidebar>\r\n                </Stack>\r\n              ) : (\r\n                <Stack\r\n                  effectProps={{ effect: 'fadeInLeft' }}\r\n                  title={group.categoryName}\r\n                  titleLink={group.nodes[0].category.slug}\r\n                >\r\n                  <Main>\r\n                    <CardList\r\n                      nodes={group.nodes}\r\n                      limit={1}\r\n                      variant='horizontal-cover-hero'\r\n                    />\r\n                    <Divider space={2} />\r\n                    <CardList\r\n                      nodes={group.nodes}\r\n                      limit={2}\r\n                      skip={2}\r\n                      columns={[1, 1, 2]}\r\n                      variant='horizontal'\r\n                      loading='eager'\r\n                      // omitMedia\r\n                      omitCategory\r\n                    />\r\n                    <Divider space={2} />\r\n                    <CardList\r\n                      nodes={group.nodes}\r\n                      limit={2}\r\n                      skip={4}\r\n                      columns={[1, 2]}\r\n                      variant={['horizontal-md', 'horizontal-aside']}\r\n                      mediaType='icon'\r\n                      omitCategory\r\n                    />\r\n                  </Main>\r\n                </Stack>\r\n              )}\r\n              {index !== posts.group.length - 1 && <Divider />}\r\n            </React.Fragment>\r\n          ))}\r\n      </Hero>\r\n      <Divider space={3} />\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default Posts\r\n","import { graphql } from 'gatsby'\r\nimport PostsPage from '../containers/Posts'\r\n\r\nexport default PostsPage\r\n\r\nexport const pageQuery = graphql`\r\n  query PostsPageQuery(\r\n    $paginatePostsPage: Boolean!\r\n    $skip: Int\r\n    $limit: Int\r\n    $includeExcerpt: Boolean!\r\n    $includeTimeToRead: Boolean!\r\n    $imageQuality: Int!\r\n  ) {\r\n    featuredPosts: allArticle(\r\n      filter: {\r\n        private: { ne: true }\r\n        draft: { ne: true }\r\n        featured: { eq: true }\r\n        category: {\r\n          id: {\r\n            in: [\r\n              \"7c0c6ff9-07a8-5bde-a579-7d42fc0874fa\"\r\n              \"67152c1a-551d-52b2-a8f1-c6c5f36c2fc4\"\r\n              \"4f4c6676-555d-5334-b7ef-884b834eac21\"\r\n            ]\r\n          }\r\n        }\r\n      }\r\n      sort: { fields: [date], order: DESC }\r\n      limit: 10\r\n    ) {\r\n      nodes {\r\n        ...ArticlePreview\r\n        ...ArticleThumbnailFeatured\r\n      }\r\n    }\r\n\r\n    recentPosts: allArticle(\r\n      filter: {\r\n        private: { ne: true }\r\n        draft: { ne: true }\r\n        category: {\r\n          id: {\r\n            in: [\r\n              \"7c0c6ff9-07a8-5bde-a579-7d42fc0874fa\"\r\n              \"67152c1a-551d-52b2-a8f1-c6c5f36c2fc4\"\r\n              \"4f4c6676-555d-5334-b7ef-884b834eac21\"\r\n            ]\r\n          }\r\n        }\r\n      }\r\n      sort: { fields: [date], order: DESC }\r\n      limit: 6\r\n    ) {\r\n      nodes {\r\n        ...ArticlePreview\r\n        ...ArticleThumbnailRegular\r\n      }\r\n    }\r\n\r\n    posts: allArticle(\r\n      filter: {\r\n        private: { ne: true }\r\n        draft: { ne: true }\r\n        category: {\r\n          id: {\r\n            in: [\r\n              \"7c0c6ff9-07a8-5bde-a579-7d42fc0874fa\"\r\n              \"67152c1a-551d-52b2-a8f1-c6c5f36c2fc4\"\r\n              \"4f4c6676-555d-5334-b7ef-884b834eac21\"\r\n              \"753f6c71-e42d-5e51-b3a0-fe00c5d91bda\"\r\n              \"5a2fdb42-b194-53d7-80ca-8e4e55b67d3d\"\r\n              \"f44d9003-e424-55b1-9584-a3c00ee316c6\"\r\n            ]\r\n          }\r\n        }\r\n      }\r\n      sort: { fields: [date], order: DESC }\r\n      limit: 1000\r\n    ) @skip(if: $paginatePostsPage) {\r\n      group(field: category___name, limit: 10) {\r\n        categoryName: fieldValue\r\n        nodes {\r\n          ...ArticlePreview\r\n          ...ArticleThumbnailRegular\r\n        }\r\n      }\r\n    }\r\n\r\n    paginatedPosts: allArticle(\r\n      filter: {\r\n        private: { ne: true }\r\n        draft: { ne: true }\r\n        category: {\r\n          id: {\r\n            in: [\r\n              \"7c0c6ff9-07a8-5bde-a579-7d42fc0874fa\"\r\n              \"67152c1a-551d-52b2-a8f1-c6c5f36c2fc4\"\r\n              \"4f4c6676-555d-5334-b7ef-884b834eac21\"\r\n            ]\r\n          }\r\n        }\r\n      }\r\n      sort: { fields: [date], order: DESC }\r\n      limit: $limit\r\n      skip: $skip\r\n    ) @include(if: $paginatePostsPage) {\r\n      nodes {\r\n        ...ArticlePreview\r\n        ...ArticleThumbnailRegular\r\n      }\r\n      ...ArticlePagination\r\n    }\r\n  }\r\n`\r\n","import { useStaticQuery, graphql } from 'gatsby'\r\nimport dedupe from 'dedupe'\r\n\r\nexport const useBlogCategoriesKanash = () => {\r\n  const { kanashCatagory } = useStaticQuery(categoriesQueryKan)\r\n  return kanashCatagory.nodes\r\n    ? dedupe(kanashCatagory.nodes, node => node.slug)\r\n    : null\r\n}\r\n\r\nconst categoriesQueryKan = graphql`\r\n  query allArticleCategoryQueryKan {\r\n    kanashCatagory: allArticleCategory(\r\n      filter: {\r\n        id: {\r\n          in: [\r\n            \"69e2ce23-a5cf-53df-82a8-b5901da16d7a\"\r\n            \"5a2fdb42-b194-53d7-80ca-8e4e55b67d3d\"\r\n            \"753f6c71-e42d-5e51-b3a0-fe00c5d91bda\"\r\n            \"ff98f8c5-e946-5b71-a9c6-f71beefe6573\"\r\n          ]\r\n        }\r\n      }\r\n      limit: 2000\r\n    ) {\r\n      nodes {\r\n        ...ArticleCategory\r\n      }\r\n    }\r\n  }\r\n`\r\n","import { useStaticQuery, graphql } from 'gatsby'\r\nimport dedupe from 'dedupe'\r\n\r\nexport const useBlogAuthors = () => {\r\n  const { allArticleAuthor } = useStaticQuery(authorsQuery)\r\n  return allArticleAuthor.nodes\r\n    ? dedupe(allArticleAuthor.nodes, node => node.slug)\r\n    : null\r\n}\r\n\r\nconst authorsQuery = graphql`\r\n  query allArticleAuthorQuery {\r\n    allArticleAuthor(sort: { fields: [name], order: ASC }) {\r\n      nodes {\r\n        ...ArticleAuthor\r\n      }\r\n    }\r\n  }\r\n`\r\n","import { useStaticQuery, graphql } from 'gatsby'\r\nimport dedupe from 'dedupe'\r\n\r\nexport const useBlogAuthorsTwitter = () => {\r\n  const { allArticleAuthor } = useStaticQuery(authorsQuery)\r\n  return allArticleAuthor.nodes\r\n    ? dedupe(allArticleAuthor.nodes, node => node.slug)\r\n    : null\r\n}\r\n\r\nconst authorsQuery = graphql`\r\n  query allArticleAuthorQueryTwitter {\r\n    allArticleAuthor(\r\n      filter: { social: { elemMatch: { url: { regex: \"/.*twitter.*/\" } } } }\r\n      sort: { fields: [name], order: ASC }\r\n    ) {\r\n      nodes {\r\n        ...ArticleAuthor\r\n      }\r\n    }\r\n  }\r\n`\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'gatsby'\r\nimport SVG from 'react-inlinesvg'\r\nimport { Button, Box, Heading } from 'theme-ui'\r\n\r\nconst styles = {\r\n  button: {\r\n    vertical: {\r\n      variant: `cards.primary`,\r\n      display: `flex`,\r\n      alignItems: `center`,\r\n      textAlign: `initial`,\r\n      overflow: `hidden`,\r\n      mb: 3,\r\n      p: 0,\r\n      pr: 2,\r\n      svg: {\r\n        color: `omegaDark`,\r\n        verticalAlign: `middle`,\r\n        size: `icon.xs`\r\n      },\r\n      ':hover': {\r\n        svg: {\r\n          color: `white`\r\n        },\r\n        'div:first-of-type': {\r\n          bg: `alpha`\r\n        }\r\n      }\r\n    },\r\n    horizontal: {\r\n      variant: `cards.interactive`,\r\n      p: 0,\r\n      svg: {\r\n        color: `alpha`,\r\n        size: `icon.sm`\r\n      },\r\n      ':hover': {\r\n        svg: {\r\n          color: `omegaDark`\r\n        }\r\n      }\r\n    }\r\n  },\r\n  icon: {\r\n    vertical: {\r\n      display: [`flex`, `none`, `flex`],\r\n      transition: `all 250ms ease`,\r\n      alignItems: `center`,\r\n      justifyContent: `center`,\r\n      alignSelf: `stretch`,\r\n      bg: `omegaLight`,\r\n      width: 70\r\n    },\r\n    horizontal: {\r\n      display: [`block`, `none`, `block`],\r\n      boxSizing: `content-box`,\r\n      transition: `all 250ms ease`,\r\n      borderRadius: `bottom`,\r\n      width: `1/3`,\r\n      height: `icon.sm`,\r\n      mx: `auto`,\r\n      pt: 3\r\n    }\r\n  },\r\n  text: {\r\n    flex: `auto`,\r\n    color: `omegaDark`,\r\n    whiteSpace: `nowrap`,\r\n    p: 3,\r\n    m: 0\r\n  }\r\n}\r\n\r\nexport const IconButton = ({\r\n  variant,\r\n  name,\r\n  Icon,\r\n  iconPath,\r\n  iconColor,\r\n  to\r\n}) => (\r\n  <Button variant='none' as={to && Link} to={to} sx={styles.button[variant]}>\r\n    {(Icon || iconPath) && (\r\n      <Box sx={styles.icon[variant]}>\r\n        {iconPath && <SVG src={iconPath} />}\r\n        {Icon && <Icon color={iconColor} />}\r\n      </Box>\r\n    )}\r\n    <Heading variant='h4' as='span' sx={styles.text}>\r\n      {name}\r\n    </Heading>\r\n  </Button>\r\n)\r\n\r\nexport default IconButton\r\n\r\nIconButton.defaultProps = {\r\n  variant: 'horizontal',\r\n  number: undefined\r\n}\r\n\r\nIconButton.propTypes = {\r\n  variant: PropTypes.oneOf(['horizontal', 'vertical']),\r\n  name: PropTypes.string,\r\n  number: PropTypes.number,\r\n  Icon: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\r\n  iconPath: PropTypes.string,\r\n  to: PropTypes.string\r\n}\r\n","import React from 'react'\r\nimport { Box } from 'theme-ui'\r\nimport { FaArchive } from 'react-icons/fa'\r\nimport IconButton from '@components/IconButton'\r\nimport Section from '@components/Section'\r\n\r\nconst styles = {\r\n  horizontal: {\r\n    display: `flex`,\r\n    flexWrap: `nowrap`,\r\n    overflowX: `auto`,\r\n    width: `auto`,\r\n    scrollBehavior: `smooth`,\r\n    m: -2,\r\n    a: {\r\n      flex: 1,\r\n      minWidth: [`1/3`, `auto`],\r\n      m: 2\r\n    }\r\n  }\r\n}\r\n\r\nconst Categories = ({ variant, categories, ...props }) => (\r\n  <Section aside={variant === 'vertical'} title='مواضيع' {...props}>\r\n    <Box sx={styles[variant]}>\r\n      {categories &&\r\n        categories.map(({ id, name, slug, totalCount, icon }) => {\r\n          const buttonProps = {\r\n            key: id,\r\n            name,\r\n            number: totalCount,\r\n            to: slug,\r\n            iconPath: icon,\r\n            Icon: !icon && FaArchive,\r\n            variant\r\n          }\r\n\r\n          return <IconButton {...buttonProps} />\r\n        })}\r\n    </Box>\r\n  </Section>\r\n)\r\n\r\nexport default Categories\r\n\r\nCategories.defaultProps = {\r\n  variant: 'vertical'\r\n}\r\n"],"names":["data","posts","featuredPosts","props","recentPosts","pageContext","categories","services","useBlogCategoriesKanash","ScrollTop","showBelow","Seo","title","Divider","Categories","variant","omitTitle","sx","position","CardList","nodes","limit","columns","loading","skip","wide","group","length","map","index","key","categoryName","titleLink","category","slug","pl","display","effectProps","effect","space","omitCategory","mediaType","kanashCatagory","useStaticQuery","categoriesQueryKan","dedupe","node","useBlogAuthors","allArticleAuthor","authorsQuery","useBlogAuthorsTwitter","styles","button","vertical","alignItems","textAlign","overflow","mb","p","pr","svg","color","verticalAlign","size","bg","horizontal","icon","transition","justifyContent","alignSelf","width","boxSizing","borderRadius","height","mx","pt","text","flex","whiteSpace","m","IconButton","name","Icon","iconPath","iconColor","to","as","Link","src","defaultProps","number","undefined","flexWrap","overflowX","scrollBehavior","a","minWidth","Section","aside","id","totalCount","buttonProps","FaArchive"],"sourceRoot":""}